#include<bits/stdc++.h>
using namespace std;

typedef struct Node {
	char c;
	int m;
	Node *next;
}List;

void AddFirst(Node* &head, char c, int m)
{
	Node *p = new Node;
	p->c = c;
	p->m = m;
	p->next= head;
	head = p;
	return;
}

void delButOverlap(Node *head)
{
	Node *ptr1, *ptr2, *dup;
	ptr1 = head;
	while(ptr1 != NULL && ptr1->next != NULL)
	{
		ptr2 = ptr1;
		while(ptr2->next != NULL)
		{
			if(ptr1->c == ptr2->next->c)
			{
				dup = ptr2->next;
				ptr1->m += ptr2->next->m;
				ptr2->next = ptr2->next->next;
				delete dup;
			}
			else
				ptr2 = ptr2->next;
		}
		ptr1 = ptr1->next;
	}
}

void perIn(int *a, int *b)
{
	int tmp = *a;
	*a = *b;
	*b = tmp;
}

void perCh(char *a, char *b)
{
	char tmp;
	tmp = *a;
	*a = *b;
	*b = tmp;
}

void sortList(Node *head)
{
	Node *i = new Node;
	Node *j = new Node;
	
	i = head;
	for(; i != NULL && i->next != NULL; i = i->next)
	{
		for(j = i->next; j != NULL; j = j->next)
		{
			if(i->c > j->c)
			{
				perIn(&i->m, &j->m);
				perCh(&i->c, &j->c);
			}
		}
	}
}

void Statistic(Node *head)
{
	delButOverlap(head);
	sortList(head);
	Node *p = new Node;
	p = head;
	while(p != NULL)
	{
		cout << p->c << ": " << p->m << endl;
		p = p->next;
	}
}

void program()
{
	int n; 	cin >> n;
	char c;
	int m;
	Node *first = new Node;
	first = NULL;
	for(int i = 0; i < n; i++)
	{
		cin >> c >> m;
		AddFirst(first, c, m);
	}
	Statistic(first);
}

int main()
{
	program();
	
}
